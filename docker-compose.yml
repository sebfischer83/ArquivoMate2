version: '3.8'

name: arquivomate2

services:
  api:
    build:
      context: .
      dockerfile: src/ArquivoMate2.API/Dockerfile
    ports:
      - "5000:8081"
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      USER_SECRETS_ID: bb5e46f1-5f35-4a18-b8ac-a5d3eef93c99
      ConnectionStrings__Default: "Host=db;Port=5432;Database=arquivomate;Username=postgres;Password=yourpassword"
      ConnectionStrings__Hangfire: "Host=db;Port=5432;Database=hangfire;Username=postgres;Password=yourpassword"
    deploy:
        resources:
            limits:
                memory: 4096M

  redis:
    image: redis:8.2.2
    container_name: cache
    command: ["redis-server", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lfu"]
    volumes:
       - redis:/data
       - redis:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    ports:
     - 6379:6379
     - 13333:8001
    deploy:
        resources:
            limits:
                memory: 256M

  db:
    image: postgres:18
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: arquivomate
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - db_data:/var/lib/postgresql/data
    deploy:
        resources:
            limits:
                memory: 1024M

  db-init:
    image: postgres:18
    depends_on:
      db:
        condition: service_healthy
    environment:
        PGPASSWORD: yourpassword
    command: |
        bash -c "
            echo 'Creating additional databases...'

            DB_EXISTS=\$$(psql -h db -U postgres -d postgres -tAc \"SELECT 1 FROM pg_database WHERE datname='arquivomate'\")
            if [ \"\$$DB_EXISTS\" != \"1\" ]; then
            echo 'Creating arquivomate database...'
            psql -h db -U postgres -d postgres -c 'CREATE DATABASE arquivomate;'
            fi
      
            DB_EXISTS=\$$(psql -h db -U postgres -d postgres -tAc \"SELECT 1 FROM pg_database WHERE datname='hangfire'\")
            if [ \"\$$DB_EXISTS\" != \"1\" ]; then
            echo 'Creating hangfire database...'
            psql -h db -U postgres -d postgres -c 'CREATE DATABASE hangfire;'
            fi
      
            echo 'Database initialization completed'
        "
    restart: "no"

  pgadmin:
    image: 'docker.io/dpage/pgadmin4:latest'
    environment:
      PGADMIN_DEFAULT_EMAIL: "test@test.de"
      PGADMIN_DEFAULT_PASSWORD: "mypassword"
    ports:
      - 15080:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin/

  meili:
    image: getmeili/meilisearch:v1.22.3
    container_name: meili
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=supersecret
    volumes:
      - meili_data:/meili_data
    deploy:
        resources:
            limits:
                memory: 1024M

volumes:
  db_data:
    driver: local
  redis:
    driver: local
  seq:
    driver: local
  meili_data:
    driver: local
  pgadmin-data:
    driver: local

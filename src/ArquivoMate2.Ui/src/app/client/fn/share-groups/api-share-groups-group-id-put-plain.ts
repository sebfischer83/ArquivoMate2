/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { ShareGroupDtoApiResponse } from '../../models/share-group-dto-api-response';
import { UpdateShareGroupRequest } from '../../models/update-share-group-request';

export interface ApiShareGroupsGroupIdPut$Plain$Params {

/**
 * Identifier of the group that should be updated.
 */
  groupId: string;
  
    /**
     * Updated group details.
     */
    body?: UpdateShareGroupRequest
}

export function apiShareGroupsGroupIdPut$Plain(http: HttpClient, rootUrl: string, params: ApiShareGroupsGroupIdPut$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<ShareGroupDtoApiResponse>> {
  const rb = new RequestBuilder(rootUrl, apiShareGroupsGroupIdPut$Plain.PATH, 'put');
  if (params) {
    rb.path('groupId', params.groupId, {});
    rb.body(params.body, 'application/*+json');
  }

  return http.request(
    rb.build({ responseType: 'text', accept: 'text/plain', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<ShareGroupDtoApiResponse>;
    })
  );
}

apiShareGroupsGroupIdPut$Plain.PATH = '/api/share-groups/{groupId}';

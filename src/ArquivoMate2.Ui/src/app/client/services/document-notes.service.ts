/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiDocumentsDocumentIdNotesGet$Json } from '../fn/document-notes/api-documents-document-id-notes-get-json';
import { ApiDocumentsDocumentIdNotesGet$Json$Params } from '../fn/document-notes/api-documents-document-id-notes-get-json';
import { apiDocumentsDocumentIdNotesGet$Plain } from '../fn/document-notes/api-documents-document-id-notes-get-plain';
import { ApiDocumentsDocumentIdNotesGet$Plain$Params } from '../fn/document-notes/api-documents-document-id-notes-get-plain';
import { apiDocumentsDocumentIdNotesNoteIdDelete } from '../fn/document-notes/api-documents-document-id-notes-note-id-delete';
import { ApiDocumentsDocumentIdNotesNoteIdDelete$Params } from '../fn/document-notes/api-documents-document-id-notes-note-id-delete';
import { apiDocumentsDocumentIdNotesPost$Json } from '../fn/document-notes/api-documents-document-id-notes-post-json';
import { ApiDocumentsDocumentIdNotesPost$Json$Params } from '../fn/document-notes/api-documents-document-id-notes-post-json';
import { apiDocumentsDocumentIdNotesPost$Plain } from '../fn/document-notes/api-documents-document-id-notes-post-plain';
import { ApiDocumentsDocumentIdNotesPost$Plain$Params } from '../fn/document-notes/api-documents-document-id-notes-post-plain';
import { DocumentNoteDto } from '../models/document-note-dto';

@Injectable({ providedIn: 'root' })
export class DocumentNotesService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiDocumentsDocumentIdNotesGet()` */
  static readonly ApiDocumentsDocumentIdNotesGetPath = '/api/documents/{documentId}/notes';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDocumentsDocumentIdNotesGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDocumentsDocumentIdNotesGet$Plain$Response(params: ApiDocumentsDocumentIdNotesGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<DocumentNoteDto>>> {
    return apiDocumentsDocumentIdNotesGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDocumentsDocumentIdNotesGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDocumentsDocumentIdNotesGet$Plain(params: ApiDocumentsDocumentIdNotesGet$Plain$Params, context?: HttpContext): Observable<Array<DocumentNoteDto>> {
    return this.apiDocumentsDocumentIdNotesGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<DocumentNoteDto>>): Array<DocumentNoteDto> => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDocumentsDocumentIdNotesGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDocumentsDocumentIdNotesGet$Json$Response(params: ApiDocumentsDocumentIdNotesGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<DocumentNoteDto>>> {
    return apiDocumentsDocumentIdNotesGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDocumentsDocumentIdNotesGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDocumentsDocumentIdNotesGet$Json(params: ApiDocumentsDocumentIdNotesGet$Json$Params, context?: HttpContext): Observable<Array<DocumentNoteDto>> {
    return this.apiDocumentsDocumentIdNotesGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<DocumentNoteDto>>): Array<DocumentNoteDto> => r.body)
    );
  }

  /** Path part for operation `apiDocumentsDocumentIdNotesPost()` */
  static readonly ApiDocumentsDocumentIdNotesPostPath = '/api/documents/{documentId}/notes';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDocumentsDocumentIdNotesPost$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiDocumentsDocumentIdNotesPost$Plain$Response(params: ApiDocumentsDocumentIdNotesPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<DocumentNoteDto>> {
    return apiDocumentsDocumentIdNotesPost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDocumentsDocumentIdNotesPost$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiDocumentsDocumentIdNotesPost$Plain(params: ApiDocumentsDocumentIdNotesPost$Plain$Params, context?: HttpContext): Observable<DocumentNoteDto> {
    return this.apiDocumentsDocumentIdNotesPost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<DocumentNoteDto>): DocumentNoteDto => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDocumentsDocumentIdNotesPost$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiDocumentsDocumentIdNotesPost$Json$Response(params: ApiDocumentsDocumentIdNotesPost$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<DocumentNoteDto>> {
    return apiDocumentsDocumentIdNotesPost$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDocumentsDocumentIdNotesPost$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiDocumentsDocumentIdNotesPost$Json(params: ApiDocumentsDocumentIdNotesPost$Json$Params, context?: HttpContext): Observable<DocumentNoteDto> {
    return this.apiDocumentsDocumentIdNotesPost$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<DocumentNoteDto>): DocumentNoteDto => r.body)
    );
  }

  /** Path part for operation `apiDocumentsDocumentIdNotesNoteIdDelete()` */
  static readonly ApiDocumentsDocumentIdNotesNoteIdDeletePath = '/api/documents/{documentId}/notes/{noteId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiDocumentsDocumentIdNotesNoteIdDelete()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDocumentsDocumentIdNotesNoteIdDelete$Response(params: ApiDocumentsDocumentIdNotesNoteIdDelete$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiDocumentsDocumentIdNotesNoteIdDelete(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiDocumentsDocumentIdNotesNoteIdDelete$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiDocumentsDocumentIdNotesNoteIdDelete(params: ApiDocumentsDocumentIdNotesNoteIdDelete$Params, context?: HttpContext): Observable<void> {
    return this.apiDocumentsDocumentIdNotesNoteIdDelete$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}

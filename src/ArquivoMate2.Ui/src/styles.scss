.filepond--file-action-button {
    cursor: pointer;
}

.filepond--wrapper {
    margin-top: 15px;
}

/* the text color of the drop label*/
.filepond--drop-label {
    background-color: var(--tui-background-base-alt);
    color: var(--tui-text-secondary) !important;
}

/* underline color for "Browse" button */
.filepond--label-action {
    text-decoration-color: #aaa;
}

/* the background color of the filepond drop area */
.filepond--panel-root {
    background-color: var(--tui-background-base-alt) !important;
    color: var(--tui-text-secondary) !important;
     border-radius: 0 !important;
}

/* the border radius of the file item */
/* (empty ruleset removed to satisfy linter; no visual change) */

/* the background color of the file and file panel (used when dropping an image) */
.filepond--item-panel {
    background-color: #555;
}

/* the background color of the drop circle */
.filepond--drip-blob {
    background-color: #000;
}

/* the background color of the black action buttons */
.filepond--file-action-button {
    background-color: rgba(0, 0, 0, 0.5);
}

/* the icon color of the black action buttons */
.filepond--file-action-button {
    color: white;
}

/* the color of the focus ring */
.filepond--file-action-button:hover,
.filepond--file-action-button:focus {
    box-shadow: 0 0 0 0.125em rgba(255, 255, 255, 0.9);
}

/* the text color of the file status and info labels */
.filepond--file {
    color: white;
}

/* error state color */
[data-filepond-item-state*='error'] .filepond--item-panel,
[data-filepond-item-state*='invalid'] .filepond--item-panel {
    background-color: red;
}

[data-filepond-item-state='processing-complete'] .filepond--item-panel {
    background-color: green;
}

/* bordered drop area */
/* (empty ruleset removed to satisfy linter; visual rules are defined above) */

.filepond--list-scroller {
    background-color: var(--tui-background-base-alt) !important;
    color: var(--tui-text-secondary) !important;
}

.tui-root > tui-scroll-controls {
  display: none;
}

/* Hide Taiga root scroll controls (explicit target for the element shown in DOM) */
tui-scroll-controls.t-root-scrollbar,
tui-scroll-controls.t-scrollbars,
/* fallback: any tui-scroll-controls instances */
tui-scroll-controls {
    display: none !important;
    visibility: hidden !important;
}

/* When Settings page is active, prevent body/document scrolling and rely on internal scroll containers */
/* Body-level workaround removed: page-level flex layout and component scroll containers handle scrolling now. */